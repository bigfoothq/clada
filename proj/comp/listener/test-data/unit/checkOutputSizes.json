{
  "cases": [
    {
      "name": "empty results",
      "input": [[]], 
      "expected": {
        "valid": true,
        "totalSize": 0,
        "errors": []
      }
    },
    {
      "name": "small outputs under limits",
      "input": [[
        {
          "action": {
            "action": "file_read",
            "parameters": {"path": "/tmp/small.txt"},
            "metadata": {"blockId": "abc", "startLine": 1, "endLine": 3}
          },
          "result": {
            "success": true,
            "content": "This is a small file content that is well under the limit"
          }
        },
        {
          "action": {
            "action": "exec",
            "parameters": {"lang": "bash", "code": "echo hello"},
            "metadata": {"blockId": "def", "startLine": 4, "endLine": 6}
          },
          "result": {
            "success": true,
            "stdout": "hello\n",
            "stderr": "",
            "exit_code": 0
          }
        }
      ]],
      "expected": {
        "valid": true,
        "totalSize": 63,
        "errors": []
      }
    },
    {
      "name": "single output exceeds limit",
      "input": [[
        {
          "action": {
            "action": "file_read",
            "parameters": {"path": "/tmp/huge.txt"},
            "metadata": {"blockId": "xyz", "startLine": 1, "endLine": 3}
          },
          "result": {
            "success": true,
            "content": "@REPEAT:x:60000"
          }
        }
      ]],
      "expected": {
        "valid": false,
        "totalSize": 0,
        "errors": [
          {
            "action": {
              "action": "file_read",
              "parameters": {"path": "/tmp/huge.txt"},
              "metadata": {"blockId": "xyz", "startLine": 1, "endLine": 3}
            },
            "result": {
              "success": false,
              "error": "Output too large: 60000 bytes (max 50000)"
            }
          }
        ]
      }
    },
    {
      "name": "total exceeds limit with multiple outputs",
      "input": [[
        {
          "action": {
            "action": "file_read",
            "parameters": {"path": "/tmp/file1.txt"},
            "metadata": {"blockId": "aaa", "startLine": 1, "endLine": 3}
          },
          "result": {
            "success": true,
            "content": "@REPEAT:a:40000"
          }
        },
        {
          "action": {
            "action": "file_read", 
            "parameters": {"path": "/tmp/file2.txt"},
            "metadata": {"blockId": "bbb", "startLine": 4, "endLine": 6}
          },
          "result": {
            "success": true,
            "content": "@REPEAT:b:40000"
          }
        },
        {
          "action": {
            "action": "file_read",
            "parameters": {"path": "/tmp/file3.txt"},
            "metadata": {"blockId": "ccc", "startLine": 7, "endLine": 9}
          },
          "result": {
            "success": true,
            "content": "@REPEAT:c:40000"
          }
        },
        {
          "action": {
            "action": "file_read",
            "parameters": {"path": "/tmp/file4.txt"},
            "metadata": {"blockId": "ddd", "startLine": 10, "endLine": 12}
          },
          "result": {
            "success": true,
            "content": "@REPEAT:d:40000"
          }
        },
        {
          "action": {
            "action": "file_read",
            "parameters": {"path": "/tmp/file5.txt"},
            "metadata": {"blockId": "eee", "startLine": 13, "endLine": 15}
          },
          "result": {
            "success": true,
            "content": "@REPEAT:e:40000"
          }
        }
      ]],
      "expected": {
        "valid": true,
        "totalSize": 200000,
        "errors": []
      }
    },
    {
      "name": "failed actions ignored in size calculation",
      "input": [[
        {
          "action": {
            "action": "file_read",
            "parameters": {"path": "/tmp/missing.txt"},
            "metadata": {"blockId": "fail", "startLine": 1, "endLine": 3}
          },
          "result": {
            "success": false,
            "error": "ENOENT: no such file or directory"
          }
        },
        {
          "action": {
            "action": "file_read",
            "parameters": {"path": "/tmp/exists.txt"},
            "metadata": {"blockId": "pass", "startLine": 4, "endLine": 6}
          },
          "result": {
            "success": true,
            "content": "small content"
          }
        }
      ]],
      "expected": {
        "valid": true,
        "totalSize": 13,
        "errors": []
      }
    },
    {
      "name": "exec with large combined stdout and stderr",
      "input": [[
        {
          "action": {
            "action": "exec",
            "parameters": {"lang": "python", "code": "print('x' * 30000); import sys; sys.stderr.write('e' * 30000)"},
            "metadata": {"blockId": "py1", "startLine": 1, "endLine": 3}
          },
          "result": {
            "success": true,
            "stdout": "@REPEAT:x:30000\n",
            "stderr": "@REPEAT:e:30000",
            "exit_code": 0
          }
        }
      ]],
      "expected": {
        "valid": false,
        "totalSize": 0,
        "errors": [
          {
            "action": {
              "action": "exec",
              "parameters": {"lang": "python", "code": "print('x' * 30000); import sys; sys.stderr.write('e' * 30000)"},
              "metadata": {"blockId": "py1", "startLine": 1, "endLine": 3}
            },
            "result": {
              "success": false,
              "error": "Output too large: 60001 bytes (max 50000)"
            }
          }
        ]
      }
    },
    {
      "name": "data field counted as JSON string",
      "input": [[
        {
          "action": {
            "action": "ls",
            "parameters": {"path": "/tmp"},
            "metadata": {"blockId": "ls1", "startLine": 1, "endLine": 3}
          },
          "result": {
            "success": true,
            "data": [
              {"name": "file1.txt", "type": "file", "size": 1024, "modified": "2024-01-01T00:00:00Z"},
              {"name": "file2.txt", "type": "file", "size": 2048, "modified": "2024-01-01T00:00:00Z"},
              {"name": "dir1", "type": "directory", "size": 4096, "modified": "2024-01-01T00:00:00Z"}
            ]
          }
        }
      ]],
      "expected": {
        "valid": true,
        "totalSize": 335,
        "errors": []
      }
    }
  ]
}