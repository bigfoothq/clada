=== PROCESSED: 2025-06-21 09:53:47 ===
SUCCESS Block 1: Updated /Users/stuart/repos/clada/clada/debug-parse.js
===

This is revealing! The htmlparser2 is creating `cdata` type nodes, not `text` nodes as I expected. But crucially, the CDATA content is NOT in the `data` field of the cdata node. Let me investigate further:

<<<EXPLANATION>>>
The CDATA nodes have empty data fields. The actual content must be in the cdata node's children. Let's check the cdata node structure.
<<<FILE>>>
clada/debug-parse.js
<<<SEARCH>>>
  if (searchNode.children.length > 0) {
    searchNode.children.forEach((child, i) => {
      console.log(`Child ${i}: type="${child.type}", data="${child.data || ''}", name="${child.name || ''}"`);
    });
  }
<<<REPLACE>>>
  if (searchNode.children.length > 0) {
    searchNode.children.forEach((child, i) => {
      console.log(`Child ${i}: type="${child.type}", data="${child.data || ''}", name="${child.name || ''}"`);
      if (child.type === 'cdata' && child.children) {
        console.log(`  CDATA has ${child.children.length} children:`);
        child.children.forEach((cdataChild, j) => {
          console.log(`    Child ${j}: type="${cdataChild.type}", data="${cdataChild.data || ''}"`);
        });
      }
    });
  }
<<<END>>>

Run this to see where the CDATA content actually lives.